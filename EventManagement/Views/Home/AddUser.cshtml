@{
    ViewData["Title"] = "Users";
}


<section class="content">
    <div class="container-fluid">
        <br>
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Add User</h3>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtMemberId">Member Id</label>
                            <input type="text" class="form-control" value="@(Model != null ? Model.MemberId.ToString() : "")" validation="alphanum" id="txtMemberId" placeholder="Member Id" fdprocessedid="m8cjcj">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtRFID">RFID</label>
                            <input type="text" class="form-control" value="@(Model != null ? Model.RfId.ToString() : "")" validation="alphanum" id="txtRFID" placeholder="RFID" fdprocessedid="5abcy">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtFirstName">First Name</label>
                            <input type="text" class="form-control" value="@(Model != null ? Model.FirstName.ToString() : "")" validation="alpha" id="txtFirstName" placeholder="First Name" fdprocessedid="gu3fsg">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtLastName">Last Name</label>
                            <input type="text" class="form-control" value="@(Model != null ? Model.LastName.ToString() : "")" validation="alpha" id="txtLastName" placeholder="Last Name" fdprocessedid="hvwkup">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtMobile">Mobile</label>
                            <input type="number" class="form-control" value="@(Model != null ? Model.MobileNumber.ToString() : "")" validation="mobile" id="txtMobile" placeholder="Mobile" fdprocessedid="ncisx6">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="txtEmail">Email</label>
                            <input type="email" autocomplete="off" value="@(Model != null ? Model.UserEmail.ToString() : "")" validation="email" class="form-control" id="txtEmail" placeholder="Email" fdprocessedid="1zli6y">
                        </div>
                    </div>
                    <div class="col-md-4">

                        <div class="form-group clearfix">
                            <label for="txtLifeGroup">Life Group</label>
                            <input type="text" autocomplete="off" value="@(Model != null ? Model.LifeGroup.ToString() : "")" validation="alphanum" class="form-control" id="txtLifeGroup" placeholder="Life Group" fdprocessedid="9t0lkq">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group clearfix">
                                    <label for="txtAddress">Address</label>
                                    <textarea class="form-control" id="txtAddress" placeholder="Address">@(Model != null ? Model.Address.ToString() : "")</textarea>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="drpRole">Role</label>
                                    <select id="drpRole" tabindex="" class="form-control" fdprocessedid="0pawgw">
                                        <option value="User">User</option>
                                        <option value="Staff">Staff</option>
                                        <option value="Admin">Admin</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 pwdField" style="display:none">
                                <div class="form-group">
                                    <label for="txtPassword">Password</label>
                                    <input type="password" autocomplete="off" validation="password" optional="true" class="form-control" id="txtPassword" placeholder="Password">
                                </div>
                            </div>
                            <div class="col-md-6 pwdField" style="display:none">
                                <div class="form-group">
                                    <label for="txtConfirmPassword">Confirm Password</label>
                                    <input type="password" autocomplete="off" validation="password" optional="true" class="form-control" id="txtConfirmPassword" placeholder="Confirm Password">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="photo">User Photo:</label><br>
                                    <input type="file" name="photo" id="photo" accept="image/*">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <img src="@(Model != null && !String.IsNullOrEmpty(Model.Photo) ? $"data:image/png;base64,{Model.Photo}" : "/img/img_avatar.png")" alt="Preview" width="150" height="150" id="imagePreview">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <button class="btn btn-primary" id="btnSave" fdprocessedid="37ltyc">Save</button>
                        <button style="display:none" class="btn btn-primary" id="btnUpdate">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="/themeAssets//plugins//jquery//jquery.min.js"></script>
<script>
    var user = {
        "UserId": 0,
        "MemberId": "",
        "RfId": "",
        "Role": "",
        "FirstName": "",
        "LastName": "",
        "MobileNumber": "",
        "UserEmail": "",
        "Address": "",
        "Photo": "",
        "LifeGroup": "",
        "Password": "",
        "IsActive": true,
        "CreatedOn": null,
        "CreatedBy": 0,
        "UpdatedOn": null,
        "UpdatedBy": 0
    }

    var uid = 0;

    var photoBase64 = "";

    $(document).ready(function () {
        debugger;
        if (suser.role == "User")
            window.location.href = "/Home/Events";
        var urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('u') != '') {
            uid = parseInt(urlParams.get('u'));
        }
        if (uid > 0) {
            $('#btnSave').hide();
            $('#btnUpdate').show();
            LoadUserData();
        }
    });

    $('#drpRole').on('change', function () {
        if ($(this).val() == 'User') {
            $('.pwdField').hide();
            $('input[type="password"]').attr('optional', 'true');

        } else {
            $('.pwdField').show();
            $('input[type="password"]').removeAttr('optional');

        }
    });

    $("#btnSave").on('click', async function () {
        if (ValidateForm()) {
            if ($("#txtPassword").val() != $("#txtConfirmPassword").val()) {
                $("#txtConfirmPassword").addClass("is-invalid");
                $("#txtConfirmPassword").removeClass("is-valid");
                $("#txtConfirmPassword").siblings(".error-msg").remove();
                $("#txtConfirmPassword").after(`<label class="error-msg mb-0">Password Mismatch!</label>`);
                return;
            }
            await BindSaveDataToModel();
            $.ajax({
                url: '/api/User/AddUser',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(user),
                success: function (resp) {
                    console.log(resp);
                    if (resp.status) {
                        Swal.fire('Registered!', 'User added successfully!', 'success').then(() => {
                            window.location.href = '/Home/Index'
                        });
                    } else {
                        Swal.fire('Failed!', resp.message, 'error')
                    }
                },
                error: function (err) {
                    Swal.fire('Failed!', err.responseJSON.message, 'error')
                    console.log(err);
                }
            });
        }
    })

    $("#btnUpdate").on('click', async function () {
        if (ValidateForm()) {
            if ($("#txtPassword").val() != $("#txtConfirmPassword").val()) {
                $("#txtConfirmPassword").addClass("is-invalid");
                $("#txtConfirmPassword").removeClass("is-valid");
                $("#txtConfirmPassword").siblings(".error-msg").remove();
                $("#txtConfirmPassword").after(`<label class="error-msg mb-0">Password Mismatch!</label>`);
                return;
            }
            await BindSaveDataToModel();
            user.UserId = uid;
            $.ajax({
                url: '/api/User/UpdateUser',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(user),
                success: function (resp) {
                    if (resp.status) {
                        Swal.fire('Updated!', 'User updated successfully!', 'success').then(() => {
                            window.location.href = '/Home/Index'
                        });
                    } else {
                        Swal.fire('Failed!', resp.message, 'error')
                    }
                },
                error: function (err) {
                    Swal.fire('Failed!', 'User update failed', 'error')
                    console.log(err);
                }
            });
        }
    })

    async function BindSaveDataToModel() {
        var file = $('#photo')[0].files[0];
        if (file) {
            try {
                var base64String = await getBase64FromImage(file);
                user.photo = base64String ?? photoBase64;
            } catch (error) {
                console.error('Error generating base64:', error);
                return;
            }
        } else {
            user.photo = photoBase64;
        }

        user.FirstName = $("#txtFirstName").val();
        user.LastName = $("#txtLastName").val();
        user.MobileNumber = $("#txtMobile").val();
        user.UserEmail = $("#txtEmail").val();
        user.RfId = $("#txtRFID").val();
        user.MemberId = $("#txtMemberId").val();
        user.Password = $("#txtPassword").val();
        user.Address = $("#txtAddress").val();
        user.LifeGroup = $("#txtLifeGroup").val();
        user.Role = $('#drpRole').val();
        user.CreatedBy = suser.userId;
        user.UpdatedBy = suser.userId;
    }

    function LoadUserData() {
        $.ajax({
            url: '/api/User/GetUserById' + '/' + uid,
            type: 'GET',
            contentType: 'application/json',
            success: function (u) {
                $('#txtFirstName').val(u.firstName);
                $('#txtLastName').val(u.lastName);
                $('#txtMobile').val(u.mobileNumber);
                $('#txtEmail').val(u.userEmail);
                $('#txtRFID').val(u.rfId);
                $('#txtMemberId').val(u.memberId);
                $('#txtPassword').val(u.password);
                $('#txtConfirmPassword').val(u.password);
                $('#txtAddress').val(u.address);
                $('#txtLifeGroup').val(u.lifeGroup);
                photoBase64 = u.photo;
                if (u.photo) {
                    $("#imagePreview").attr('src', 'data:image/*;base64,' + u.photo);
                }
                $('#txtLifeGroup').val(u.lifeGroup);
                $('#drpRole').val(u.role);
                $('#drpRole').trigger('change');
            },
            error: function (e) { }
        })
    }

    $('#photo').change(function () {
        var file = $(this)[0].files[0];
        if (file) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(file);
        }
    });

    function getBase64FromImage(file) {
        return new Promise((resolve, reject) => {
            var reader = new FileReader();
            reader.onload = function () {
                resolve(reader.result.split(',')[1]);
                // Extract base64 portion
            };
            reader.onerror = reject;
            reader.readAsDataURL(file);
            // Read the file as a data URL (base64 string)
        });
    }

    function ValidateForm() {
        let isValid = true;
        $("[validation]").each(function () {
            isValid = validateInput($(this)) && isValid;
        });
        return isValid;
    }

</script>
